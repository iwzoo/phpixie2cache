<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-19 at 16:49:50.
 */
class Cache_File_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var Cache
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
		$this->conf_file = tempnam(sys_get_temp_dir(), 'test.conf');
		$pixie = $this->getMock('\PHPixie\Pixie',array('find_file'));
		$pixie->expects($this->any())
                 ->method('find_file')
                 ->will($this->returnValue($this->conf_file));
		$pixie-> config->set('cache.default.driver', 'file');
		$pixie-> config->set('cache.default.cache_dir', '/cache');
		if (is_dir(sys_get_temp_dir().'/cache'))
			$this->delTree(sys_get_temp_dir().'/cache');
		mkdir(sys_get_temp_dir().'/cache');
		$pixie->root_dir = sys_get_temp_dir();
		$this->pixie = $pixie;
		$this->object = new \PHPixie\Cache\File($pixie, 'default');
    }
	private function delTree($dir) {
		$files = array_diff(scandir($dir), array('.','..')); 
		foreach ($files as $file) { 
			(is_dir("$dir/$file")) ? $this->delTree("$dir/$file") : unlink("$dir/$file"); 
		} 
		return rmdir($dir); 
	}

    protected function tearDown()
    {
		unlink($this->conf_file);
		$this->delTree(sys_get_temp_dir().'/cache');
    }

	public function testSetGet(){
		$this->object->set('test', 'a', 1);
		$this->assertEquals('a', $this->object->get("test"));
	}
	public function testLifetime(){
		$this->object->set('test', 'a', 1);
		sleep(2);
		$this->assertEquals('3', $this->object->get("test",3));
	}
	public function testDelete(){
		$this->object->set('test', 'a');
		$this->object->delete('test');
		$this->assertEquals('3', $this->object->get("test",3));
	}
	public function testClear(){
		$this->object->set('test', 'a');
		$this->object->clear();
		$this->assertEquals('3', $this->object->get("test", 3));
	}	
	public function testGarbage_Collect() {
		$this->object->clear();
		$this->object->set('test', 'a', 1);
		sleep(2);
		$this->object->garbage_collect();
		$this->assertEquals(2, count(scandir(sys_get_temp_dir().'/cache')));
	}
	
}
